{"version":3,"sources":["../src/index.js"],"names":["dotenv","config","app","debug","port","process","env","PORT","use","express","json","urlencoded","extended","secret","SESSION_SECRET","cookie","maxAge","resave","saveUninitialized","origin","methods","preflightContinue","optionsSuccessStatus","get","req","res","status","msg","authRoute","parcelRoute","userRoute","err","next","stack","render","error","server","listen","on","close"],"mappings":";;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAIA;;AACA;;AACA;;AAbA;AASA;AACA;AAKAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,KAAK,GAAG,uBAAM,OAAN,CAAd;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAzB;AAEAL,GAAG,CAACM,GAAJ,CAAQ,wBAAO,MAAP,CAAR;AACAN,GAAG,CAACM,GAAJ,CAAQC,oBAAQC,IAAR,EAAR,E,CAAyB;;AACzBR,GAAG,CAACM,GAAJ,CAAQC,oBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAV,GAAG,CAACM,GAAJ,CAAQ,yBAAR;AACAN,GAAG,CAACM,GAAJ,CAAQ,+BAAR;AACAN,GAAG,CAACM,GAAJ,CAAQ,gCAAQ;AACdK,EAAAA,MAAM,EAAER,OAAO,CAACC,GAAR,CAAYQ,cADN;AAEdC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAFM;AAGdC,EAAAA,MAAM,EAAE,KAHM;AAGC;AACfC,EAAAA,iBAAiB,EAAE,KAJL,CAIY;;AAJZ,CAAR,CAAR,E,CAMA;;AAEAhB,GAAG,CAACM,GAAJ,CACE,sBAAK;AACHW,EAAAA,MAAM,EAAE,GADL;AAEHC,EAAAA,OAAO,EAAE,8CAFN;AAGHC,EAAAA,iBAAiB,EAAE,KAHhB;AAIHC,EAAAA,oBAAoB,EAAE;AAJnB,CAAL,CADF;AASApB,GAAG,CAACqB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB;AAAEiB,IAAAA,GAAG,EAAE;AAAP,GAArB,CAAd;AAAA,CAAb,E,CAEA;;AACAzB,GAAG,CAACM,GAAJ,CAAQ,cAAR,EAAwBoB,gBAAxB;AACA1B,GAAG,CAACM,GAAJ,CAAQ,iBAAR,EAA2BqB,mBAA3B;AACA3B,GAAG,CAACM,GAAJ,CAAQ,eAAR,EAAyBsB,iBAAzB,E,CACA;AAEA;AACA;AACA;AACA;;AACA5B,GAAG,CAACM,GAAJ,CAAQ,UAACuB,GAAD,EAAMP,GAAN,EAAWC,GAAX,EAAgBO,IAAhB,EAAyB;AAC/B7B,EAAAA,KAAK,CAAC4B,GAAG,CAACE,KAAL,CAAL;AACAR,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX;AACAD,EAAAA,GAAG,CAACS,MAAJ,CAAW,6GAAX,EAA0H;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAA1H;AACAC,EAAAA,IAAI;AACL,CALD;AAOA,IAAMI,MAAM,GAAGlC,GAAG,CAACmC,MAAJ,CAAWjC,IAAX,EAAiB,YAAM;AACpCD,EAAAA,KAAK,+BAAwBC,IAAxB,OAAL;AACD,CAFc,CAAf;AAIAC,OAAO,CAACiC,EAAR,CAAW,MAAX,EAAmB;AAAA,SAAMF,MAAM,CAACG,KAAP,EAAN;AAAA,CAAnB;AACAlC,OAAO,CAACiC,EAAR,CAAW,SAAX,EAAsB;AAAA,SAAMF,MAAM,CAACG,KAAP,EAAN;AAAA,CAAtB;AACAlC,OAAO,CAACiC,EAAR,CAAW,mBAAX,EAAgC;AAAA,SAAMF,MAAM,CAACG,KAAP,EAAN;AAAA,CAAhC","sourcesContent":["import express from 'express';\n// import bodyParser from 'body-parser'\nimport Debug from 'debug';\nimport dotenv from 'dotenv';\nimport morgan from 'morgan';\nimport helmet from 'helmet';\nimport session from 'express-session';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\n\n// import swagger from 'swagger-ui-express';\n// import swaggerDocument from '../swagger.js';\nimport parcelRoute from './routes/parcels';\nimport userRoute from './routes/users';\nimport authRoute from './routes/auth';\n\ndotenv.config();\n\nconst app = express();\nconst debug = Debug('index');\nconst port = process.env.PORT;\n\napp.use(morgan('tiny'));\napp.use(express.json()); // For JSON requests\napp.use(express.urlencoded({ extended: true }));\napp.use(helmet());\napp.use(cookieParser());\napp.use(session({\n  secret: process.env.SESSION_SECRET,\n  cookie: { maxAge: 60000 },\n  resave: false, // forces the session to be saved back to the store\n  saveUninitialized: false, // dont save unmodified\n}));\n// app.use(bodyParser.urlencoded({ extended: false }))\n\napp.use(\n  cors({\n    origin: '*',\n    methods: 'GET, HEAD, PUT, PATCH, POST, DELETE, OPTIONS',\n    preflightContinue: false,\n    optionsSuccessStatus: 204,\n  }),\n);\n\napp.get('/', (req, res) => res.status(200).json({ msg: 'Welcome to SendBox API.' }));\n\n// import routes\napp.use('/api/v1/auth', authRoute);\napp.use('/api/v1/parcels', parcelRoute);\napp.use('/api/v1/users', userRoute);\n// app.use('/docs', swagger.serve, swagger.setup(swaggerDocument));\n\n// eslint-disable-next-line no-unused-vars\n// app.get((err, req, res, next) => {\n//   res.status(500).send('Something is broken! Fix it!!!');\n// });\napp.use((err, req, res, next) => {\n  debug(err.stack);\n  res.status(500);\n  res.render('There was an Error processing your request. Something\"s broken! to Fix it!!! update your data and try again', { error: err });\n  next();\n});\n\nconst server = app.listen(port, () => {\n  debug(`App running on port ${port}.`);\n});\n\nprocess.on('exit', () => server.close());\nprocess.on('SIGTERM', () => server.close());\nprocess.on('uncaughtException', () => server.close());\n"],"file":"index.js"}