{"version":3,"sources":["../../src/helpers/newsletter.js"],"names":["postNewsletter","req","res","mailOptions","from","process","env","EMAIL","to","EMAIL_TO","subject","body","name","generateTextFromHTML","html","username","title","image","message","disclaimer","FRONTEND_URL","param","token","transporter","sendMail","error","info","json","done","response"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN,EAAc;AACnC,MAAMC,WAAW,GAAG;AAClBC,IAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,KADA;AAElBC,IAAAA,EAAE,EAAEH,OAAO,CAACC,GAAR,CAAYG,QAFE;AAGlBC,IAAAA,OAAO,YAAKT,GAAG,CAACU,IAAJ,CAASC,IAAd,iBAHW;AAIlBC,IAAAA,oBAAoB,EAAE,IAJJ;AAKlBC,IAAAA,IAAI,uNAOQb,GAAG,CAACU,IAAJ,CAASI,QAPjB,+BAQId,GAAG,CAACU,IAAJ,CAASK,KARb,yBASIf,GAAG,CAACU,IAAJ,CAASM,KATb,yBAUIhB,GAAG,CAACU,IAAJ,CAASO,OAVb,yBAWIjB,GAAG,CAACU,IAAJ,CAASQ,UAXb,qEAcad,OAAO,CAACC,GAAR,CAAYc,YAdzB,mCAc8DnB,GAAG,CAACoB,KAAJ,CAAUC,KAdxE;AALc,GAApB;;AAuBAC,0BAAYC,QAAZ,CAAqBrB,WAArB,EAAkC,UAACsB,KAAD,EAAQC,IAAR,EAAiB;AACjD,QAAID,KAAJ,EAAW;AACT,aAAOvB,GAAG,CAACyB,IAAJ,CAAS;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAAT,CAAP;AACD;;AACD,WAAOvB,GAAG,CAACyB,IAAJ,CAAS;AACdC,MAAAA,IAAI,EAAE,IADQ;AAEdV,MAAAA,OAAO,EAAEQ,IAAI,CAACG;AAFA,KAAT,CAAP;AAID,GARD;AASD,CAjCD;;eAmCe7B,c","sourcesContent":["import transporter from './emailConfig';\n\nconst postNewsletter = (req, res) => {\n  const mailOptions = {\n    from: process.env.EMAIL,\n    to: process.env.EMAIL_TO,\n    subject: `${req.body.name} Newsletter!`,\n    generateTextFromHTML: true,\n    html: `<div className=\"email\" style=\"\n        border: 1px solid black;\n        padding: 20px;\n        font-family: sans-serif;\n        line-height: 2;\n        font-size: 20px;\n      \">\n        <p>Hi ${req.body.username}, </p>\n          ${req.body.title}\n          ${req.body.image}\n          ${req.body.message}\n          ${req.body.disclaimer}\n          </div>\n          \\n\\n\n          <a href=\"${process.env.FRONTEND_URL}/unsubscribe?useToken=${req.param.token}\">Click Here to Unsubscribe</a>\n          `,\n  };\n\n  transporter.sendMail(mailOptions, (error, info) => {\n    if (error) {\n      return res.json({ error: true });\n    }\n    return res.json({\n      done: true,\n      message: info.response,\n    });\n  });\n};\n\nexport default postNewsletter;\n"],"file":"newsletter.js"}