{"version":3,"sources":["../../src/helpers/validator.js"],"names":["strPresent","str","toString","trim","validate","schema","errorField","Object","keys","find","field","signUpSchema","params","firstName","lastName","otherNames","email","helper","isValidEmail","username","password","loginSchema","createParcelsSchema","weight","fromAddress","toAddress","currentLocation","itemName","recipient","destinationSchema","length","currentLocationSchema","changeStatusSchema","status","makeAdminSchema","isAdmin"],"mappings":"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","sourcesContent":["// import Joi from 'joi';\nimport helper from './helper';\n\nconst strPresent = (str) => !!str && !!str.toString().trim();\n\nconst validate = (schema) => {\n  // find any field that returns a false\n  const errorField = Object.keys(schema).find((field) => !schema[field]);\n  if (errorField) { return `${errorField} is invalid`; }\n  return false;\n};\n\nconst signUpSchema = (params) => {\n  const schema = {\n    firstName: strPresent(params.firstName),\n    lastName: strPresent(params.lastName),\n    otherNames: params.otherNames,\n    email: helper.isValidEmail(params.email),\n    username: strPresent(params.username),\n    password: strPresent(params.password),\n  };\n  return validate(schema);\n};\n\nconst loginSchema = (params) => {\n  const schema = {\n    email: helper.isValidEmail(params.email),\n    password: strPresent(params.password),\n  };\n  return validate(schema);\n};\n\nconst createParcelsSchema = (params) => {\n  const schema = {\n    weight: strPresent(params.weight),\n    fromAddress: strPresent(params.fromAddress),\n    toAddress: strPresent(params.toAddress),\n    currentLocation: strPresent(params.currentLocation),\n    itemName: strPresent(params.itemName),\n    recipient: strPresent(params.recipient),\n  };\n  return validate(schema);\n};\n\nconst destinationSchema = (params) => {\n  const schema = {\n    toAddress: strPresent(params.toAddress)\n                    && params.toAddress.length > 2,\n  };\n  return validate(schema);\n};\n\nconst currentLocationSchema = (params) => {\n  const schema = {\n    currentLocation: strPresent(params.currentLocation)\n                          && params.currentLocation.length > 2,\n  };\n  return validate(schema);\n};\n\nconst changeStatusSchema = (params) => {\n  const schema = {\n    status: strPresent(params.status),\n    // && (params.status !== 'delivered'),\n  };\n  return validate(schema);\n};\n\nconst makeAdminSchema = (params) => {\n  const schema = {\n    isAdmin: strPresent(params.isAdmin),\n  };\n  return validate(schema);\n};\n\nexport {\n  signUpSchema, loginSchema, createParcelsSchema, destinationSchema, currentLocationSchema,\n  changeStatusSchema, makeAdminSchema,\n};\n"],"file":"validator.js"}